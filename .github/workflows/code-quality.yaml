name: Code quality checks

on: [pull_request]

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-${{ matrix.python-version }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev,test]
      - name: Test with pytest
        run: |
          pytest
  staticPython:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        command:
          - bandit -r open_alchemy -s B101,B303,B310

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev,test]
      - name: Run static code analyser
        run: |
          ${{ matrix.command }}
  staticNode:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        command:
          - npx cspell "open_alchemy/**/*.py" "open_alchemy/**/*.json" "open_alchemy/**/*.j2" "docs/**/*.rst" "docs/**/*/yml" "docs/**/*.yaml" "tests/**/*.py" "*.yaml" "*.json" "*.yml" "examples/**/*.py" "examples/**/*.yaml" "examples/**/*.yml"
          - find examples -name "*spec.yml" ! -path "*/remote/*" | xargs -n 1 sh -c 'npx swagger-cli validate $0 || exit 255'

    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        run: npm install cspell @apidevtools/swagger-cli
      - name: Run static code analyser
        run: |
          ${{ matrix.command }}
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: pre-commit/action@v2.0.0

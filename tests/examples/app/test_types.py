"""Tests for example app."""
# pylint: disable=no-member

import pytest

from examples.app import models_autogenerated
from open_alchemy import models


@pytest.mark.app
def test_models_autogen_init(db_session, employee_kwargs):
    """
    GIVEN autogenerated models
    WHEN a model is constructed using __init__ and added to the session
    THEN the employee is in the database.
    """
    employee = models_autogenerated.Employee(**employee_kwargs)

    db_session.add(employee)

    queried_employees = db_session.query(models.Employee).all()
    assert len(queried_employees) == 1
    queried_employee = queried_employees[0]
    for key, value in employee_kwargs.items():
        assert getattr(queried_employee, key) == value


@pytest.mark.app
def test_models_autogen_from_dict(db_session, employee_kwargs):
    """
    GIVEN autogenerated models
    WHEN a model is constructed using __init__ and added to the session
    THEN the employee is in the database.
    """
    employee = models_autogenerated.Employee.from_dict(**employee_kwargs)

    db_session.add(employee)

    queried_employees = db_session.query(models.Employee).all()
    assert len(queried_employees) == 1
    queried_employee = queried_employees[0]
    for key, value in employee_kwargs.items():
        assert getattr(queried_employee, key) == value
